# Chat Rooms - With Free Tunneling (WebSocket Compatible)
# Elixir 1.14 with Erlang/OTP 25 + Cloudflare Tunnel
FROM elixir:1.14.5-alpine

# Set environment
ENV MIX_ENV=prod
ENV SECRET_KEY_BASE=this_is_a_very_long_secret_key_for_docker_demo_only_do_not_use_in_production_this_needs_to_be_at_least_64_bytes_long_to_work_with_phoenix_cookie_store
ENV PHX_SERVER=true
ENV PHX_HOST=localhost
ENV PORT=4000

# Install dependencies
RUN apk add --no-cache build-base nodejs npm git curl wget

# Install cloudflared (Cloudflare Tunnel)
RUN wget -O cloudflared https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 && \
    chmod +x cloudflared && \
    mv cloudflared /usr/local/bin/

# Set working directory
WORKDIR /app

# Copy source code
COPY server/ .

# Install and compile
RUN mix local.hex --force && mix local.rebar --force
RUN mix deps.get
RUN mix compile

# Build assets
RUN mix assets.deploy

# Expose port
EXPOSE 4000

# Create startup script with Cloudflare Tunnel
RUN echo '#!/bin/sh' > start.sh && \
    echo 'echo "ðŸš€ Starting Chat Rooms with Cloudflare Tunnel..."' >> start.sh && \
    echo 'echo ""' >> start.sh && \
    echo 'echo "Starting Phoenix server..."' >> start.sh && \
    echo 'mix phx.server &' >> start.sh && \
    echo 'PHOENIX_PID=$!' >> start.sh && \
    echo 'echo "Waiting for Phoenix server to start..."' >> start.sh && \
    echo 'sleep 10' >> start.sh && \
    echo 'echo "Starting Cloudflare Tunnel..."' >> start.sh && \
    echo 'echo "Creating public tunnel with full WebSocket support..."' >> start.sh && \
    echo 'echo "Your public URL will appear below:"' >> start.sh && \
    echo 'echo "Note: Cloudflare Tunnel provides excellent WebSocket support!"' >> start.sh && \
    echo 'cloudflared tunnel --url http://localhost:4000' >> start.sh && \
    chmod +x start.sh

CMD ["./start.sh"]
